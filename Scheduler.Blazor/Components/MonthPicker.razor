<div class="d-flex justify-center my-3">
    <MudIconButton Icon="@Icons.TwoTone.ArrowLeft" 
                   OnClick="@(async() => await SubtractYearFromDate())"/>
    <MudButton OnClick="@(async () => await OnYearSelect.InvokeAsync(SelectedDate))">
        <MudText Typo="Typo.h4">
            @(SelectedDate.Year)
        </MudText>
    </MudButton>
    <MudIconButton Icon="@Icons.TwoTone.ArrowRight" 
                   OnClick="@(async() => await AddYearToDate())"/>
</div>
<div>
    <MudContainer Style="display: inline-grid; grid-template-columns: repeat(3, minmax(0, 1fr));"
                  Fixed="true">
        @foreach (var month in DateTimeService.GetAllMonths(SelectedDate))
        {
            if (month.Month == SelectedDate.Month)
            {
                <MudButton Color="Color.Primary"
                           Variant="@Variant"
                           Class="rounded-0"
                           DisableElevation="true"
                           OnClick="@(async () => await SetMonth(month))">
                    <MudText Typo="Typo.h5">
                        @DateTimeService.GetAbbreviatedMonthName(month)
                    </MudText>
                </MudButton>
                continue;
            }

            <MudButton OnClick="@(async() => await SetMonth(month))"
                       Class="rounded-0"
                       DisableElevation="true">
                <MudText Typo="Typo.h6">
                    @DateTimeService.GetAbbreviatedMonthName(month)
                </MudText>
            </MudButton>
        }
    </MudContainer>
</div>